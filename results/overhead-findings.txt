[increases overhead (first is slower)]
-for loop with list vs. array (reason: due to new instantiation of iterator)
-for loop with super type vs. concrete type (reason: due to less JIT optimization possibilities)
-passing by argument vs. instance variable (reason: unknown)
-pipe with array vs. single element (reason: unknown)
-

[irrelevant w.r.t. overhead]
-foreach vs. index-based iteration
-iterative vs. recursive execution
-null-check vs. NullObject
-


[analysis performance results (50%)]

2:	7400 ns
8:	1200 ns (iterative; argument/return w/o pipe)
9:	9400 ns (queued pipe)
10:	4900 ns (single element pipe)
11: 7400 ns (fixed sized pipe)
12: 3300 ns (recursive; argument/return w/o pipe)
13: 3300 ns (recursive; argument/return w/o pipe; w/o pipeline class)
